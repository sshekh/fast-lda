Where;
    K is the number of topics
    N is the number of documents
    V is the size of the vocabulary
    D is the length of a document


LDA_MLE

    N * K * (
        2       (1-, 1+)
      + 2       (log)
    ) 
    + OPT_ALPHA

OPT_ALPHA

    Note: ignoring the isnan condition since that hasn't been shown to appear.

    ALPHA_CONVERGE * (
        exp
      + 4                (1*, 1/, 2+)
      + 7 + 2 * lgamma   (alhood: 4*, 3+)
      + 6 + 2 * digamma  (d_alhood: 4*, 2+)
      + 6 + 2 * trigamma (d2_alhood: 5*, 1+)
      + fabs
    )
    + exp

LIKELIHOOD

        K * digamma
      + K               (+)
      + digamma
      + 4               (2*, 2+)
      + 3 * lgamma
      + K * 9           (7+, 2*)
      + K * D * 6 (4+, 2*, 1 log)

      = 33K + 32 + 4 + 3*35 + 9K + K*D*6 = 6KD + 42K + 141

DIGAMMA
      (18+, 5*, 8/, 1 log)

LOG_SUM
      # taking < as add 
      (4+, log, exp)

TRIGAMMA
      (7+, 7*, 2/)  
    + 6*(2+, 1*, 1/)

LOG_GAMMA
      (20+, 5*, 2/, 7 logs)

LDA_INFERENCE
      K * 2         (+,/)
    + K * digamma
    + K * D         (/)

    + VAR_MAX_ITER *
      {
          D * K * (5 + log_sum + exp + digamma)     (4+, *)
        + compute_likelihood
        + 2                                         (+)
      }

  = 2K + 32K + KD + VAR_MAX_ITER * (44KD + 6KD + 42K + 141 + 2) = VAR_MAX_ITER * (50KD + 42K + 143) + KD + 34K

DOC_E_STEP
      LDA_INFERENCE
    + K * 2         (2+)
    + 2             (1+, 1*)
    + DIGAMMA
    + K * N * 4     (2+, 2*)

    = VAR_MAX_ITER * (50KD + 42K + 143) + KD + 34K
      + 2K + 2 + 32 + 4KN + 1
    = VAR_MAX_ITER * (50KD + 42K + 143) + 4KN + KD + 36K + 35


RUN_EM
      random_initialize_ss
    + lda_mle
    + var_iter *
        N * doc_e_step
        N             (1+)
        lda_mle
        2             (1+, 1/)
        1             (1*)
        N * lda_inference

    = 4KN + 3KV + var_iter * (N * doc_e_step + N + 3KV + 3 + N * lda_inference)

RANDOM_INITIALIZE_SS
    K * N * (3 + myrand)    (2+, 1/)
      ~ 4KN



TOTAL ASSYMPTOTIC FLOP COUNT: O(N * K * D * var_iter_inf * var_iter_em)
